created:
    - app/Http/Controllers/CommandesController.php
    - app/Http/Controllers/CommandeDetailsController.php
    - database/factories/CommandesFactory.php
    - database/factories/CommandeDetailsFactory.php
    - database/migrations/2025_08_06_054049_create_commandes_table.php
    - database/migrations/2025_08_06_054050_create_commande_details_table.php
    - app/Models/Commandes.php
    - app/Models/CommandeDetails.php
    - tests/Feature/Http/Controllers/CommandesControllerTest.php
    - tests/Feature/Http/Controllers/CommandeDetailsControllerTest.php
    - app/Http/Requests/CommandeStoreRequest.php
    - app/Http/Requests/CommandeUpdateRequest.php
    - app/Http/Requests/CommandeDetailStoreRequest.php
    - app/Http/Requests/CommandeDetailUpdateRequest.php
    - app/Http/Resources/CommandeCollection.php
    - app/Http/Resources/CommandeResource.php
    - app/Http/Resources/CommandeDetailCollection.php
    - app/Http/Resources/CommandeDetailResource.php
updated:
    - routes/api.php
models:
    User: { first_name: string, last_name: string, email: 'string unique', email_verified_at: 'timestamp nullable', password: string, phone: 'string nullable', address: 'text nullable', date_of_birth: 'date nullable', gender: 'enum[male,female,other] nullable', profile_photo: 'string nullable', status: 'enum[active,inactive,suspended] default:active', role: 'enum[super_admin,company_admin,agency_manager,cashier,salesperson,accountant,stock_manager] default:salesperson', permissions: 'json nullable', last_login_at: 'timestamp nullable', must_change_password: 'boolean default:false', two_factor_enabled: 'boolean default:false', two_factor_secret: 'string nullable', recovery_codes: 'json nullable', company_id: 'id foreign:companies nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users nullable', remember_token: 'string nullable', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Company, Agency, User', hasMany: 'Company, Agency, Stock, UserStock, Category, Product, Client, Supplier, Purchase, Sale, CashRegister, CashTransaction, Expense, ExpenseType, StockTransfer, Payment, User', belongsToMany: Stock } }
    Company: { tp_name: string, tp_type: string, tp_TIN: string, tp_trade_number: 'string nullable', tp_postal_number: 'string nullable', tp_phone_number: 'string nullable', tp_address_province: 'string nullable', tp_address_commune: 'string nullable', tp_address_quartier: 'string nullable', tp_address_avenue: 'string nullable', tp_address_rue: 'string nullable', tp_address_number: 'string nullable', vat_taxpayer: 'string nullable', ct_taxpayer: 'string nullable', tl_taxpayer: 'string nullable', tp_fiscal_center: 'string nullable', tp_activity_sector: 'string nullable', tp_legal_form: 'string nullable', payment_type: 'string nullable', is_actif: 'boolean default:true', user_id: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: User, hasMany: 'Agency, Stock, Category, Product, Client, Supplier, Purchase, Sale, CashRegister, Expense, ExpenseType' } }
    Stock: { name: string, location: 'string nullable', description: 'text nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: 'UserStock, StockProduct, Purchase, Sale, StockTransfer, CashRegister, Expense', belongsToMany: 'User, Product' } }
    UserStock: { user_id: 'id foreign:users', stock_id: 'id foreign:stocks', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'User, Stock, Agency, User' } }
    Category: { name: string, description: 'text nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: Product } }
    Product: { name: string, description: 'text nullable', category_id: 'id foreign:categories', purchase_price: decimal, sale_price: decimal, unit: string, alert_quantity: float, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Category, Agency, User', hasMany: 'StockProduct, PurchaseItem, SaleItem, StockTransferItem', belongsToMany: Stock } }
    StockProduct: { stock_id: 'id foreign:stocks', product_id: 'id foreign:products', quantity: float, agency_id: 'id foreign:agencies nullable', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Stock, Product, Agency' } }
    Client: { name: string, phone: 'string nullable', email: 'string nullable', address: 'text nullable', balance: 'decimal default:0', nif: 'text nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: Sale } }
    Supplier: { name: string, phone: 'string nullable', email: 'string nullable', address: 'text nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: Purchase } }
    Purchase: { supplier_id: 'id foreign:suppliers', stock_id: 'id foreign:stocks', total_amount: decimal, paid_amount: decimal, due_amount: decimal, purchase_date: datetime, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Supplier, Stock, Agency, User', hasMany: 'PurchaseItem, Payment' } }
    PurchaseItem: { purchase_id: 'id foreign:purchases', product_id: 'id foreign:products', quantity: integer, purchase_price: decimal, subtotal: decimal, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Purchase, Product, Agency, User' } }
    Sale: { client_id: 'id foreign:clients', stock_id: 'id foreign:stocks', user_id: 'id foreign:users', total_amount: decimal, paid_amount: decimal, due_amount: decimal, sale_date: datetime, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Client, Stock, User, Agency, User', hasMany: 'SaleItem, Payment' } }
    SaleItem: { sale_id: 'id foreign:sales', product_id: 'id foreign:products', quantity: integer, sale_price: decimal, discount: decimal, subtotal: decimal, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Sale, Product, Agency, User' } }
    Payment: { payment_type: string, reference_id: integer, amount: decimal, payment_method: string, payment_date: datetime, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User' } }
    StockTransfer: { from_stock_id: 'id foreign:stocks', to_stock_id: 'id foreign:stocks', user_id: 'id foreign:users', transfer_date: datetime, note: text, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Stock, Stock, User, Agency, User', hasMany: StockTransferItem } }
    StockTransferItem: { stock_transfer_id: 'id foreign:stock_transfers', product_id: 'id foreign:products', quantity: integer, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'StockTransfer, Product, Agency, User' } }
    CashRegister: { user_id: 'id foreign:users', stock_id: 'id foreign:stocks', opening_balance: decimal, closing_balance: decimal, status: string, opened_at: datetime, closed_at: datetime, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'User, Stock, Agency, User', hasMany: CashTransaction } }
    CashTransaction: { cash_register_id: 'id foreign:cash_registers', type: string, reference_id: integer, amount: decimal, description: text, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'CashRegister, Agency, User' } }
    Expense: { stock_id: 'id foreign:stocks', user_id: 'id foreign:users', expense_type_id: 'id foreign:expense_types', amount: decimal, description: text, expense_date: datetime, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Stock, User, ExpenseType, Agency, User', hasMany: 'Payment, CashTransaction' } }
    ExpenseType: { name: 'string unique', description: text, agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: Expense } }
    Agency: { company_id: 'id foreign:companies', code: 'string unique', name: string, adresse: string, manager_id: 'id foreign:users nullable', parent_agency_id: 'id foreign:agencies nullable', is_main_office: 'boolean default:false', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Company, User, Agency, User', hasMany: 'Agency, Stock, Category, Product, Client, Supplier, Purchase, Sale, CashRegister, Expense, ExpenseType, UserStock, StockTransfer, CashTransaction' } }
    Vehicule: { name: string, model: 'string nullable', brand: 'string nullable', year: 'integer nullable', color: 'string nullable', price: 'decimal nullable', status: 'enum[available,rented,unavailable] default:available', description: 'text nullable', agency_id: 'id foreign:agencies nullable', created_by: 'id foreign:users', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Agency, User', hasMany: Vehicule } }
    Proforma: { stock_id: 'id foreign:stocks', user_id: 'id foreign:users', total_amount: double, due_amount: double, sale_date: date, note: 'text nullable', invoice_type: 'string nullable', agency_id: 'id foreign:agencies', created_by: 'id foreign:users', proforma_items: 'text nullable', client: 'text nullable', timestamps: timestamps, softdeletes: softDeletes, relationships: { belongsTo: 'Stock, User, Agency' } }
    ProductCompanyName: { product_code: 'string null', company_code: 'string null', item_name: 'string null', size: 'string null', packing_details: 'string null', mfg_location: 'string null', weight_kg: 'double null', order_qty: 'double null', total_weight: 'double null', pu: 'string null', total_weight_pu: float }
    Commandes: { vehicule_id: integer, matricule: 'string nullable', commentaire: 'text nullable', poids: 'float nullable', date_livraison: 'date nullable', description: 'text nullable' }
    CommandeDetails: { commande_id: integer, produit_id: 'string nullable', produit_code: 'string nullable', produit_name: 'string nullable', company_code: integer, quantite: 'double nullable', poids: 'double nullable', prix_unitaire: 'double default 0.0', remise: 'float nullable nullable', date_livraison: 'date nullable', statut: 'string nullable' }
